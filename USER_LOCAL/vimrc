" Encoding {{{
set encoding=utf-8
scriptencoding utf-8
" }}}

" キーコードはすぐにタイムアウト、マッピングはタイムアウトしない。"O"を多用するので。
set notimeout ttimeout ttimeoutlen=200

" ステータス行を表示
set laststatus=2

" バックアップもスワップも作成しない。
set nobackup
set noswapfile

" インデント関連
set tabstop=4
set autoindent

" いったんフィある形式の判別を停止する。
filetype off

" NeoBundleを導入。
if has('vim_starting')
	set runtimepath+=~/local/vim/bundle/neobundle.vim/
	call neobundle#rc(expand('~/local/vim/bundle/'))
endif

call neobundle#begin(expand('~/local/vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

" NeoBundleで管理されいてるPluginを列挙。
NeoBundle 'Shougo/unite.vim'
NeoBundle 'The-NERD-tree'

call neobundle#end()

" ファイル形式の判別を有効にする。
filetype plugin indent on
set runtimepath+=~/local/vim/ftdetect/

" 未導入のプラグインをチェックする。
NeoBundleCheck

" 引数なしで起動された場合はNERDTreeを表示する。
let file_name = expand("%:p")
if has('vim_starting') &&  file_name == ""
	autocmd VimEnter * execute 'NERDTree ./'
endif

" +|`などを使ってツリー表示をするか
" 0 : 綺麗に見せる
" 1 : +|`などを使わない
let g:NERDTreeDirArrows=0

" 他のバッファをすべて閉じた時にNERDTreeが開いていたらNERDTreeも一緒に閉じる
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" vimrc読み直し用のキーマップ
nnoremap <F8> :<C-u>source $MYVIMRC<CR>

" Unite呼出用のキーマップ
nnoremap [unite] <Nop>
nmap <Space>e [unite]
nnoremap [unite]b :<C-u>Unite buffer<CR>
nnoremap [unite]f :<C-u>Unite file<CR>
